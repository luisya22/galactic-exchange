name: Go Release Pipeline

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21'

      - name: Check out code
        uses: actions/checkout@v2

      - name: build
        run: |
          go build -o gaex-${GOOS}-${GOARCH} .

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: gaex-${GOOS}-${GOARCH}
          path: gaex-${GOOS}-${GOARCH}
  
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Compress Artifacts
        run: |
          cd artifacts
          tar -cvzf gaex-${{ github.ref }}.tar.gz *

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_nam }}
          draft: false
          prerelease: false
          body: "Gaex Release"
          files: artifacts/gaex-${{github.ref_name}}.tar.gz
