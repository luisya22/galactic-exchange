name: Go Release Pipeline

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Check out code
        uses: actions/checkout@v4

      - name: build
        run: |
          go build -o gaex-${GOOS}-${GOARCH} .
          echo "Build for ${GOOS}-${GOARCH} completed."

      - name: List files in the working directory
        run: ls -la

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gaex-${{ matrix.goos }}-${{ matrix.goarch }}
          path: gaex-${{ matrix.goos }}-${{ matrix.goarch }}
 
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: List files in artifacts directory
        run: ls -la artifacts/

      - name: Compress Artifacts
        run: |
          cd artifacts
          tar -cvzf "gaex-${{ github.ref_name }}.tar.gz" gaex-*/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: "Gaex Release ${{ github.ref_name }}"

      # This step uploads the tar.gz file as a release asset.
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/gaex-${{ github.ref_name }}.tar.gz
          asset_name: gaex-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip
